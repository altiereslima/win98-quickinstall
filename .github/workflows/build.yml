name: Build Windows 9x QuickInstall

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    # Permite executar o workflow manualmente pela interface do GitHub

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Configure git to use HTTPS instead of SSH
        run: |
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          git config --global url."https://".insteadOf "git://"
      
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: false
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Fix submodule URLs and update
        run: |
          # Substituir URLs SSH por HTTPS no arquivo .gitmodules
          if [ -f ".gitmodules" ]; then
            sed -i 's|git@github.com:|https://github.com/|g' .gitmodules
            sed -i 's|git://git.busybox.net/|https://git.busybox.net/|g' .gitmodules
            sed -i 's|git://git.code.sf.net/|https://git.code.sf.net/|g' .gitmodules
            cat .gitmodules
          fi
          
          # Inicializar submodules
          git submodule init
          
          # Atualizar submodules um por um, exceto syslinux/gnu-efi que está causando problemas
          for submodule in busybox dosfstools "installer/anbui" linux pciutils tiny-floppy-bootloader util-linux win98-driver-lib-base win98-driver-lib-extra; do
            echo "Atualizando submodule: $submodule"
            git submodule update --init --depth=1 "$submodule" || echo "Failed to update $submodule, continuing anyway"
          done
          
          # Tratamento especial para syslinux
          echo "Atualizando syslinux sem recursão"
          git submodule update --init --depth=1 syslinux || echo "Failed to update syslinux, continuing anyway"
          
          # Verificar status dos submodules
          git submodule status
      
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential autoconf automake libtool pkg-config libblkid-dev libmount-dev libncurses-dev xz-utils cpio objcopy binutils
      
      - name: Setup cross-compiler
        run: |
          # Criar diretório para o cross-compiler
          mkdir -p i486-linux-musl-cross
          
          # Baixar e extrair o cross-compiler
          wget -q https://musl.cc/i486-linux-musl-cross.tgz -O i486-linux-musl-cross.tgz
          tar -xf i486-linux-musl-cross.tgz -C i486-linux-musl-cross --strip-components=1
          
          # Adicionar ao PATH
          echo "PATH=$PATH:$PWD/i486-linux-musl-cross/bin" >> $GITHUB_ENV
      
      - name: Prepare build scripts
        run: |
          # Verificar se os scripts build.sh existem nos submódulos e torná-los executáveis
          for dir in busybox dosfstools syslinux util-linux tiny-floppy-bootloader installer dosflop pciutils; do
            if [ -f "$dir/build.sh" ]; then
              chmod +x "$dir/build.sh"
              echo "Script $dir/build.sh encontrado e tornado executável"
            else
              echo "AVISO: Script $dir/build.sh não encontrado"
            fi
          done
          
          # Tornar o script principal executável
          chmod +x build.sh
      
      - name: Run build script
        run: |
          # Modificar o script para não usar sudo
          sed -i 's/sudo //g' build.sh
          
          # Executar o script de build
          ./build.sh
      
      - name: Create framework package
        run: |
          # Criar um diretório para o pacote completo
          mkdir -p win98-quickinstall-framework
          
          # Copiar arquivos importantes para o pacote
          cp -r __BIN__/* win98-quickinstall-framework/ || echo "BIN directory not found"
          
          # Criar um arquivo ZIP com o pacote
          zip -r win98-quickinstall-framework.zip win98-quickinstall-framework/
      
      - name: Upload framework package
        uses: actions/upload-artifact@v4
        with:
          name: win98-quickinstall-framework
          path: win98-quickinstall-framework.zip
          
      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: win98-quickinstall-output
          path: Windows98QuickInstall_*.zip
          if-no-files-found: warn